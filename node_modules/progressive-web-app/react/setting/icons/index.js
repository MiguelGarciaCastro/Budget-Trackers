"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Icon = void 0;

var _react = _interopRequireWildcard(require("react"));

var _prettysize = _interopRequireDefault(require("prettysize"));

require("./style.scss");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj["default"] = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var Icon =
/*#__PURE__*/
function (_Component) {
  _inherits(Icon, _Component);

  function Icon(props) {
    var _this;

    _classCallCheck(this, Icon);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Icon).call(this, props));
    var _this$props$default_v = _this.props.default_v,
        default_v = _this$props$default_v === void 0 ? '' : _this$props$default_v;
    _this.state = {
      'icon_url': default_v
    };
    _this.receiveFile = _this.receiveFile.bind(_assertThisInitialized(_this));
    _this.openUploader = _this.openUploader.bind(_assertThisInitialized(_this));
    return _this;
  }

  _createClass(Icon, [{
    key: "receiveFile",
    value: function receiveFile(e) {
      var _this2 = this;

      var f = e.currentTarget;
      /* Check file format */

      if (f.files[0].type !== 'image/jpeg') {
        alert('Only JPG allowed.');
        return;
      }
      /* Check file size */


      if (f.files[0].size > 1024 * 500) {
        alert('Selected file size is ' + (0, _prettysize["default"])(f.files[0].size) + ' that exceeds limit.');
        return;
      }
      /* Now render the image file in browser */


      var reader = new FileReader();

      reader.onload = function (e) {
        _this2.setState({
          'icon_url': e.target.result
        });
      };

      reader.readAsDataURL(f.files[0]);
      /* Pass to parent */

      var onChange = this.props.onChange;
      onChange(false, {
        'icon': f.files[0]
      });
    }
  }, {
    key: "openUploader",
    value: function openUploader() {
      this.uploadInput.click();
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var icon_url = this.state.icon_url;
      return _react["default"].createElement("div", {
        className: "icon_insert_module"
      }, _react["default"].createElement("input", {
        type: "file",
        accept: ".jpg",
        ref: function ref(el) {
          return _this3.uploadInput = el;
        },
        onChange: this.receiveFile
      }), _react["default"].createElement("img", {
        src: icon_url
      }), _react["default"].createElement("button", {
        className: "btn btn-outline-secondary btn-sm",
        onClick: this.openUploader
      }, icon_url ? 'Change' : 'Select', " Image"));
    }
  }]);

  return Icon;
}(_react.Component);

exports.Icon = Icon;