"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Dashboard = void 0;

var _react = _interopRequireWildcard(require("react"));

var _reactSvgSpinner = _interopRequireDefault(require("react-svg-spinner"));

var _react2 = require("nodereactor/react");

var _data = require("../resources/data");

var _icon = require("./icon");

require("./style.scss");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var Input = function Input(props) {
  var name = props.name,
      title = props.title,
      _props$type = props.type,
      type = _props$type === void 0 ? "text" : _props$type,
      onChange = props.onChange,
      hint = props.hint,
      _props$required = props.required,
      required = _props$required === void 0 ? true : _props$required,
      _props$disabled = props.disabled,
      disabled = _props$disabled === void 0 ? false : _props$disabled,
      _props$values = props.values,
      values = _props$values === void 0 ? [] : _props$values,
      _props$default_v = props.default_v,
      default_v = _props$default_v === void 0 ? '' : _props$default_v;
  return _react["default"].createElement("div", {
    className: "addon_input"
  }, _react["default"].createElement("label", null, _react["default"].createElement("b", null, title, " ", required ? '*' : null)), hint ? _react["default"].createElement("small", null, _react["default"].createElement("i", null, hint)) : null, type == 'text' ? _react["default"].createElement("input", {
    className: "form-control",
    name: name,
    type: "text",
    onChange: onChange,
    defaultValue: default_v,
    disabled: disabled
  }) : null, type == 'color' ? _react["default"].createElement("input", {
    className: "form-control",
    name: name,
    type: "color",
    onChange: onChange,
    defaultValue: default_v
  }) : null, type == 'icon' ? _react["default"].createElement(_icon.Icon, {
    name: name,
    onChange: onChange,
    default_v: default_v
  }) : null, type !== 'radio' ? null : _react["default"].createElement("form", null, values.map(function (item) {
    if (!default_v) {
      default_v = '';
    }

    var ttl = item;
    item = item.toLowerCase();
    default_v = default_v.toLowerCase();
    var for_id = Math.random().toString(7);
    return _react["default"].createElement("span", {
      className: "nr_pwa_radio_container",
      key: item
    }, _react["default"].createElement("input", {
      id: for_id,
      type: "radio",
      name: name,
      value: item,
      defaultChecked: item == default_v,
      onChange: onChange
    }), "\xA0", _react["default"].createElement("label", {
      htmlFor: for_id
    }, ttl));
  })));
};

var Dashboard =
/*#__PURE__*/
function (_Component) {
  _inherits(Dashboard, _Component);

  function Dashboard(props) {
    var _this;

    _classCallCheck(this, Dashboard);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));
    _this.state = {
      'fetching': true,
      'submitting': false,
      'values': {}
    };
    _this.pack_fields = {
      'short_name': {
        'title': 'Short Name'
      },
      'name': {
        'title': 'Name'
      },
      'start_url': {
        'title': 'Start URL'
      },
      'display': {
        'title': 'Display',
        'type': 'radio',
        'values': _data.displays
      },
      'orientation': {
        'title': 'Orientation',
        'type': 'radio',
        'values': _data.orientations
      },
      'theme_color': {
        'title': 'Theme Color',
        'type': 'color'
      },
      'background_color': {
        'title': 'Background Color',
        'type': 'color'
      },
      'icon': {
        'title': 'Icon',
        'type': 'icon'
      }
    };
    _this.getVal = _this.getVal.bind(_assertThisInitialized(_this));
    _this.savePwa = _this.savePwa.bind(_assertThisInitialized(_this));
    return _this;
  }

  _createClass(Dashboard, [{
    key: "getVal",
    value: function getVal(e, val) {
      var values = this.state.values;

      if (_typeof(val) == 'object') {
        values = Object.assign(values, val);
      } else {
        var el = e.currentTarget;

        if (el.type == 'radio' && !el.checked) {
          return;
        }

        values[el.name] = el.value;
      }

      this.setState({
        values: values
      });
    }
  }, {
    key: "verifyValues",
    value: function verifyValues() {
      var values = this.state.values;
      var fields = this.pack_fields;

      for (var k in fields) {
        if (k == 'icon' && values.icon_url) {
          continue;
        }

        if (!values[k] || typeof values[k] == 'string' && /\S+/.test(values[k]) == false) {
          alert(fields[k].title + ' is Required');
          return false;
        }
      }

      return true;
    }
  }, {
    key: "savePwa",
    value: function savePwa() {
      var _this2 = this;

      if (!this.verifyValues()) {
        return false;
      }

      var values = this.state.values;
      var data = new FormData();
      Object.keys(values).forEach(function (key) {
        key == 'icon' ? data.append(key, values[key], values[key].name) : data.append(key, values[key]);
      });
      this.setState({
        submitting: true
      });
      (0, _react2.ajax_request)('nr_pwa_save_manifest', data, function (r, rq, e) {
        _this2.setState({
          submitting: false
        });
      });
      return false;
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this3 = this;

      (0, _react2.ajax_request)('nr_pwa_get_manifest_file', function (r, e) {
        var _r$manifest = r.manifest,
            manifest = _r$manifest === void 0 ? {} : _r$manifest;

        _this3.setState({
          values: manifest,
          fetching: false
        });
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this4 = this;

      var _this$state = this.state,
          _this$state$values = _this$state.values,
          values = _this$state$values === void 0 ? {} : _this$state$values,
          fetching = _this$state.fetching,
          submitting = _this$state.submitting;
      var fields = this.pack_fields;
      var sprops = {
        "text": "Install",
        "button_class": ""
      };
      return fetching ? _react["default"].createElement(_reactSvgSpinner["default"], {
        size: "15px"
      }) : _react["default"].createElement("div", {
        id: "nr_pwa_setting_page_container"
      }, _react["default"].createElement("h3", null, "Progressive Web App"), Object.keys(fields).map(function (key) {
        var ob = fields[key];
        var default_v = key == 'icon' ? values.icon_url : values[key];
        key == 'start_url' ? default_v = '.' : 0;
        return _react["default"].createElement(Input, _extends({}, ob, {
          key: key,
          name: key,
          onChange: _this4.getVal,
          default_v: default_v
        }));
      }), _react["default"].createElement("div", {
        className: "text-right"
      }, _react["default"].createElement("button", {
        className: "btn btn-primary btn-sm",
        onClick: this.savePwa,
        disabled: submitting,
        title: "Manifest will be updated in both of public and build folder."
      }, "Save ", submitting ? _react["default"].createElement("span", null, "\xA0 ", _react["default"].createElement(_reactSvgSpinner["default"], {
        size: "15px"
      })) : null)), _react["default"].createElement("hr", null), _react["default"].createElement("h4", null, "PWA Installer ShortCode"), _react["default"].createElement("p", null, "[Installer package=progressive-web-app properties=", JSON.stringify(sprops), "]"), _react["default"].createElement("hr", null), _react["default"].createElement("i", null, "PWA Installer Functionalities will not work in React dev server. ", _react["default"].createElement("br", null), "Currently it's for static build mode through NR backend server."));
    }
  }]);

  return Dashboard;
}(_react.Component);

exports.Dashboard = Dashboard;