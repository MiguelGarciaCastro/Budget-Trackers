"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Installer = void 0;

var _react = _interopRequireWildcard(require("react"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var Installer =
/*#__PURE__*/
function (_Component) {
  _inherits(Installer, _Component);

  function Installer(props) {
    var _this;

    _classCallCheck(this, Installer);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Installer).call(this, props));
    _this.pwaHandler = _this.pwaHandler.bind(_assertThisInitialized(_this));
    _this.attemptToInstall = _this.attemptToInstall.bind(_assertThisInitialized(_this));
    return _this;
  }

  _createClass(Installer, [{
    key: "pwaHandler",
    value: function pwaHandler(e) {
      e.preventDefault();
      this.deferredPrompt = e;
    }
  }, {
    key: "attemptToInstall",
    value: function attemptToInstall() {
      if (!this.deferredPrompt) {
        return;
      }

      var _this$props$getPrompt = this.props.getPromptResult,
          getPromptResult = _this$props$getPrompt === void 0 ? false : _this$props$getPrompt;
      this.deferredPrompt.prompt();
      this.deferredPrompt.userChoice.then(function (choiceResult) {
        if (getPromptResult) {
          var resp = choiceResult.outcome === 'accepted' ? 'accepted' : 'rejected';
          getPromptResult(resp);
        } // this.deferredPrompt = null;

      });
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      window.addEventListener('beforeinstallprompt', this.pwaHandler);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      window.removeEventListener('beforeinstallprompt', this.pwaHandler);
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          _this$props$text = _this$props.text,
          text = _this$props$text === void 0 ? "Install" : _this$props$text,
          _this$props$button_cl = _this$props.button_class,
          button_class = _this$props$button_cl === void 0 ? "" : _this$props$button_cl;
      return _react["default"].createElement("button", {
        className: button_class,
        onClick: this.attemptToInstall
      }, text);
    }
  }]);

  return Installer;
}(_react.Component);

exports.Installer = Installer;