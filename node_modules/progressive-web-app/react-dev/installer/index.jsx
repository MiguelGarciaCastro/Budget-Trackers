import React, {Component} from 'react';

class Installer extends Component
{
    constructor(props)
    {
        super(props);

        this.pwaHandler=this.pwaHandler.bind(this);
        this.attemptToInstall=this.attemptToInstall.bind(this);
    }

    pwaHandler(e)
    {
        e.preventDefault();
        this.deferredPrompt = e;
    }

    attemptToInstall()
    {
        if(!this.deferredPrompt){return;}


        let {getPromptResult=false}=this.props;

        this.deferredPrompt.prompt();
        
        this.deferredPrompt.userChoice.then(choiceResult=> 
        {
            if(getPromptResult)
            {
                let resp=choiceResult.outcome==='accepted' ? 'accepted' : 'rejected';

                getPromptResult(resp);
            }

            // this.deferredPrompt = null;
        });
    }

    componentDidMount()
    {
        window.addEventListener('beforeinstallprompt', this.pwaHandler);
    }

    componentWillUnmount()
    {
        window.removeEventListener('beforeinstallprompt', this.pwaHandler);
    }

    render()
    {
        let {text="Install", button_class=""}=this.props;

        return <button className={button_class} onClick={this.attemptToInstall}>{text}</button>
    }
}

export {Installer}